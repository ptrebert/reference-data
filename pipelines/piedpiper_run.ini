; template for PiedPiper run configuration files

[Run]
load_path= /home/pebert/work/code/mpggit/refdata
load_name= pipelines.ppl_make_refdata

[Pipeline]
name= REFDATA
workdir= ${EnvPaths:workdir}

# Major task: genomes
to2bit= gunzip -c {{inputfile}} > {path[0]}/{ASSEMBLY[0]}.fa.tmp ; faToTwoBit {path[0]}/{ASSEMBLY[0]}.fa.tmp {{outputfile}} ; rm {path[0]}/{ASSEMBLY[0]}.fa.tmp

# Major task: chromosome sizes
chromwg= process_genomes.py --task sizes --assembly {ASSM[0]} --2bit {{inputfile}} -tsv {{outputfile1}} -bed {{outputfile2}}
chromauto= process_genomes.py --task sizes --assembly {ASSM[0]} --2bit {{inputfile}} -tsv {{outputfile1}} -bed {{outputfile2}} --select "(chr)?[0-9][0-9A-Z]?(\s|$$)"
chromaugo= process_genomes.py --task sizes --assembly {ASSM[0]} --2bit {{inputfile}} -tsv {{outputfile1}} -bed {{outputfile2}} --select "(chr)?[0-9XY][0-9A-Z]?(\s|$$)"

# Major task: gene models
gtftobed= convert_genemodel.py --input {inputfile} --output {outputfile}

# Major task: enhancer
catgzbed= gunzip -c {{inputfiles}} | cut -f 1,2,3,4 | sort -V -k 1,2 > {{outputfile}}
mrgbed= bedtools merge -d 5 -c 4 -o distinct -delim @ -i {inputfile} > {outputfile}

# Special section for projects
srv_pcgenes= convert_genemodel.py --input {inputfile} --output {outputfile} --filter-size 500 --filter-type "feature:gene,gene_type:protein_coding"
srv_cgiprom= bedtools intersect -header -u -a {inputfile} -b ${EnvPaths:workdir}/cpgislands/bed_format/hg19_cgi_ucsc_wg.bed > {outputfile}
srv_noncgi= bedtools intersect -header -v -a {inputfile} -b ${EnvPaths:workdir}/cpgislands/bed_format/hg19_cgi_ucsc_wg.bed > {outputfile}

[Ruffus]
use_threads= True
jobs= 10
verbose= 2
history_file= ${EnvPaths:ruffushist}/${Pipeline:name}_hist.sqlite
log_file= ${EnvPaths:ruffuslog}/${Pipeline:name}_ruffus.log

[JobConfig]
refdata= ${Pipeline:name}
workdir= ${EnvPaths:workdir}
outpath= ${EnvPaths:ruffusdump}
errpath= ${EnvPaths:ruffusdump}
native_spec= -l mem_free=5G,slots_free=1,tmp_free=5G
scriptdir= ${EnvPaths:ruffusdump}
keepscripts= 0